@import "./_defs.css";
@import "./_tailwind.css";
@import "./_ui.css";

:root {
	--base00: theme("colors.gray.50");
	--base01: theme("colors.gray.200");
	--base02: theme("colors.gray.300");
	--base03: theme("colors.gray.400");
	--base04: theme("colors.gray.500");
	--base05: theme("colors.gray.600");
	--base06: theme("colors.gray.700");
	--base07: theme("colors.gray.800");
	--base08: theme("colors.cyan.800");
	--base09: theme("colors.blue.600");
	--base0A: theme("colors.blue.700");
	--base0B: theme("colors.cyan.700");
	--base0C: theme("colors.cyan.600");
	--base0D: theme("colors.blue.800");
	--base0E: theme("colors.blue.900");
	--base0F: theme("colors.gray.700");

	--code-background: theme("colors.gray.50");
	--color-focus-ring: theme("colors.blue.400");

	--tw-prose-captions: theme("colors.gray.600");
}

@media (prefers-color-scheme: dark) {
	:root {
		--base00: theme("colors.gray.800");
		--base01: theme("colors.gray.700");
		--base02: theme("colors.gray.600");
		--base03: theme("colors.gray.500");
		--base04: theme("colors.gray.400");
		--base05: theme("colors.gray.300");
		--base06: theme("colors.gray.200");
		--base07: theme("colors.gray.100");
		--base08: theme("colors.cyan.300");
		--base09: theme("colors.blue.400");
		--base0A: theme("colors.blue.300");
		--base0B: theme("colors.cyan.200");
		--base0C: theme("colors.cyan.100");
		--base0D: theme("colors.blue.200");
		--base0E: theme("colors.blue.100");
		--base0F: theme("colors.gray.300");

		--code-background: theme("colors.black");
		--color-focus-ring: theme("colors.blue.300");

		--tw-prose-captions: theme("colors.gray.200");
	}
}

@media (prefers-color-scheme: dark) and (--lg) {
	:root {
		--code-background: theme("colors.gray.900");
	}
}

.prose
	:where(pre[data-line-numbers="true"]):not(:where([class~="not-prose"] *)) {
	padding-left: 3.5rem;
	position: relative;
}

.prose :where(.codeblock-line):not(:where([class~="not-prose"] *)) {
	display: block;
	width: 100%;
}

.prose
	:where(.codeblock-line[data-line-number]):not(:where([class~="not-prose"]
			*)) {
	position: relative;

	&::before {
		content: attr(data-line-number);
		position: absolute;
		font: inherit;
		line-height: inherit;
		display: block;
		right: calc(100% + 1rem);
		opacity: 0.325;
		text-align: right;
	}
}

.prose :where(pre[data-lang]):not(:where([class~="not-prose"] *)) {
	position: relative;

	&::before {
		content: attr(data-lang);
		position: absolute;
		right: 1.325rem;
		top: 1.125rem;
		font-size: 0.8em;
		font-weight: bold;
		text-transform: uppercase;
		letter-spacing: 2px;
		opacity: 0.325;
	}

	@media (max-width: 672px) {
		&::before {
			display: none;
		}
	}
}

.prose
	:where(.footnote-ref, .footnote-back):not(:where([class~="not-prose"] *)) {
	display: inline-block;
	text-decoration: none;
	margin-left: 0.25em;
}

.prose :where(.footnotes):not(:where([class~="not-prose"] *)) {
	ol {
		counter-reset: footnotes;
	}

	& li {
		list-style: none;
		position: relative;
	}

	& li::before {
		counter-increment: footnotes;
		content: counter(footnotes);
		position: absolute;
		top: 0;
		left: -1.5rem;
		font-weight: 400;
		color: var(--tw-prose-counters);
	}
}

.prose :where(aside):not(:where([class~="not-prose"] *)) {
	font-weight: inherit;
	font-style: inherit;
	border-left-width: 0.25rem;
	border-left-color: var(--tw-prose-quote-borders);
	margin-top: 1.6em;
	margin-bottom: 1.6em;
	padding-left: 1em;
}

/**
 * When `<dialog>` is properly supported, the overlay is implied and can be
 * styled with `::backdrop`, which means the DOM one should be removed.
 */
[data-a11y-dialog-native] [data-a11y-dialog-overlay] {
	display: none;
}

/**
 * When `<dialog>` is not supported, its default display is `inline` which can
 * cause layout issues.
 */
dialog[open] {
	display: block;
}

[data-a11y-dialog-root][aria-hidden="true"] {
	display: none;
}

[data-a11y-dialog-root]:not([data-a11y-dialog-native]),
[data-a11y-dialog-overlay] {
	position: fixed;
	top: 0;
	left: 0;
	bottom: 0;
	right: 0;
}

[data-a11y-dialog-root] {
	display: flex;
}

[data-a11y-dialog-overlay] {
	background-color: rgba(0, 0, 0, 0.75);
	animation: fadeIn 200ms ease-in;
}

[data-a11y-dialog-content] {
	--d-gap: 0;
	position: relative;
	width: min(740px, calc(100% - var(--d-gap) * 2));
	max-height: calc(100% - var(--d-gap) * 2);
	margin: auto;
	margin-bottom: 0;
	margin-bottom: env(safe-area-inset-bottom, 0);
	z-index: 2;
	overflow-y: auto;
	overflow-x: hidden;
}

@media (--sm) {
	[data-a11y-dialog-content] {
		--d-gap: 1.25rem;
		margin-bottom: auto;
	}
}

[data-a11y-dialog-root] {
	animation: fadeIn 200ms ease-in;
}

[data-a11y-dialog-content] {
	animation: slideInDialog 200ms ease-in;
}

@media (--sm) {
	[data-a11y-dialog-root] {
		animation: fadeIn 200ms ease-in;
	}

	[data-a11y-dialog-overlay] {
		background-color: rgba(0, 0, 0, 0.75);
		animation: none;
	}

	[data-a11y-dialog-content] {
		animation: slideInModal 200ms ease-in;
	}
}

[data-a11y-dialog-root][aria-hidden],
[data-a11y-dialog-root][aria-hidden] [data-a11y-dialog-content] {
	animation: none;
}

@media (prefers-reduced-motion) {
	[data-a11y-dialog-root],
	[data-a11y-dialog-overlay],
	[data-a11y-dialog-content],
	[data-a11y-dialog-root] [data-a11y-dialog-content] {
		animation: none;
	}
}

@keyframes fadeIn {
	0% {
		opacity: 0;
	}
	100% {
		opacity: 1;
	}
}

@keyframes slideInModal {
	0% {
		transform: translateY(2rem);
	}
	100% {
		transform: translateY(0);
	}
}

@keyframes slideInDialog {
	0% {
		transform: translateY(100%);
	}
	100% {
		transform: translateY(0);
	}
}

@keyframes superSpin {
	0% {
		transform: rotate(0);
	}
	100% {
		transform: rotate(1440deg);
	}
}
